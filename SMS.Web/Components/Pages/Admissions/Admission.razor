@page "/admission-enrollments"

<PageTitle>School Admission Form</PageTitle>

<FluentCard>
    <FluentStack HorizontalAlignment.Center Padding="20px" Gap="20px" Width="800px">
        <FluentText Variant="Title" Align="Center">Pupil Admission Registration</FluentText>
        
        <FluentDivider></FluentDivider>

        <FluentStackItem>
            <FluentText Variant="Subtitle" Align="Start">Personal Information</FluentText>
            
            <FluentGrid>
                <FluentTextField @bind-Value="model.FirstName" Label="First Name:" Required="true" ColSpan="6"></FluentTextField>
                <FluentTextField @bind-Value="model.MiddleName" Label="Middle Name:" ColSpan="6"></FluentTextField>
                <FluentTextField @bind-Value="model.LastName" Label="Last Name:" Required="true" ColSpan="6"></FluentTextField>

                <FluentSelect Id="role" name="role" Value="@model.Gender" TOption="string" Height="300px" style="width: 100%;">
                    <FluentOption Value="">Select Level</FluentOption>
                    <FluentOption Value="">-- Select --</FluentOption>
                    <FluentOption Value="Male">Male</FluentOption>
                    <FluentOption Value="Female">Female</FluentOption>
                    <FluentOption Value="Other">Other</FluentOption>
                </FluentSelect>
                <FluentDatePicker @bind-Value="model.DateOfBirth" Label="Date of Birth:" Required="true" ColSpan="6"></FluentDatePicker>
                <FluentTextField @bind-Value="model.PlaceOfBirth" Label="Place of Birth:" ColSpan="6"></FluentTextField>
                
                <FluentTextField @bind-Value="model.Nationality" Label="Nationality:" Required="true" ColSpan="6"></FluentTextField>
                <FluentTextField @bind-Value="model.Religion" Label="Religion:" ColSpan="6"></FluentTextField>
            </FluentGrid>
        </FluentStackItem>

        <FluentDivider></FluentDivider>

        <FluentStackItem>
            <FluentText Variant="Subtitle" Align="Start">Contact Information</FluentText>
            
            <FluentGrid>
                <FluentTextField @bind-Value="model.Address" Label="Address:" Required="true" ColSpan="12"></FluentTextField>
                <FluentTextField @bind-Value="model.City" Label="City:" Required="true" ColSpan="6"></FluentTextField>
                <FluentTextField @bind-Value="model.State" Label="State:" Required="true" ColSpan="6"></FluentTextField>
                <FluentTextField @bind-Value="model.PostalCode" Label="Postal Code:" ColSpan="6"></FluentTextField>
                <FluentTextField @bind-Value="model.Country" Label="Country:" Required="true" ColSpan="6"></FluentTextField>
                
                <FluentTextField @bind-Value="model.PhoneNumber" Label="Phone Number:" Required="true" ColSpan="6"></FluentTextField>
                <FluentTextField @bind-Value="model.Email" Label="Email:" ColSpan="6"></FluentTextField>
            </FluentGrid>
        </FluentStackItem>

        <FluentDivider></FluentDivider>

        <FluentStackItem>
            <FluentText Variant="Subtitle" Align="Start">Academic Information</FluentText>
            
            <FluentGrid>
                <FluentSelect Id="role" name="role" Value="@model.GradeApplyingFor"  TOption="string" Height="300px" style="width: 100%;">
                    <FluentOption Value="">Select Level</FluentOption>
                    @foreach (var k in availableGrades)
                    {
                        <FluentOption Value="@k">@k</FluentOption>
                    }
                </FluentSelect>

                <FluentSelect Id="role" name="role" Value="@model.Session" TOption="string" Height="300px" style="width: 100%;">
                    <FluentOption Value="">Select Level</FluentOption>
                    @foreach (var k in availableSessions)
                    {
                        <FluentOption Value="@k">@k</FluentOption>
                    }
                </FluentSelect>
                
                <FluentTextField @bind-Value="model.PreviousSchool" Label="Previous School (if any):" ColSpan="12"></FluentTextField>
            </FluentGrid>
        </FluentStackItem>

        <FluentDivider></FluentDivider>

        <FluentStack>
            <FluentLabel Typo="Typography.PaneHeader">
                Parent/Guardian Information
            </FluentLabel>
            <FluentGrid>
                <FluentTextField @bind-Value="model.ParentName" Label="Parent/Guardian Name:" Required="true" ColSpan="6"></FluentTextField>
                <FluentTextField @bind-Value="model.ParentRelationship" Label="Relationship:" Required="true" ColSpan="6"></FluentTextField>
                <FluentTextField @bind-Value="model.ParentOccupation" Label="Occupation:" ColSpan="6"></FluentTextField>
                <FluentTextField @bind-Value="model.ParentPhone" Label="Phone Number:" Required="true" ColSpan="6"></FluentTextField>
                <FluentTextField @bind-Value="model.ParentEmail" Label="Email:" ColSpan="6"></FluentTextField>
            </FluentGrid>
        </FluentStack>

        <FluentDivider></FluentDivider>

        <FluentStackItem>
            <FluentCheckbox @bind-Value="model.Agreement">I certify that the information provided is accurate and complete</FluentCheckbox>
        </FluentStackItem>

        <FluentStack HorizontalAlignment="HorizontalAlignment.End" Gap="10px">
            <FluentButton Appearance="Appearance.Neutral" @onclick="OnReset">Reset</FluentButton>
            <FluentButton Appearance="Appearance.Accent" @onclick="OnSubmit" Disabled="@(!model.Agreement)">Submit Application</FluentButton>
        </FluentStack>
    </FluentStack>
</FluentCard>

@if (showSuccessMessage)
{
    <FluentDialog Type="DialogType.Message" @ref="successDialog">
        <FluentText Variant="Subtitle">Application Submitted Successfully!</FluentText>
        <FluentText>Thank you for submitting the admission form. We will contact you soon.</FluentText>
        <FluentButton slot="footer" Appearance="Appearance.Accent" @onclick="CloseDialog">OK</FluentButton>
    </FluentDialog>
}

@code {
    private AdmissionModel model = new();
    private FluentDialog? successDialog;
    private bool showSuccessMessage = false;
    
    private List<string> availableGrades = new() { "Nursery", "KG", "Grade 1", "Grade 2", "Grade 3", "Grade 4", "Grade 5", "Grade 6" };
    private List<string> availableSessions = new() { "2023-2024", "2024-2025", "2025-2026" };

    private void OnSubmit()
    {
        // Here you would typically validate and send data to your backend
        Console.WriteLine("Form submitted: " + System.Text.Json.JsonSerializer.Serialize(model));
        
        showSuccessMessage = true;
        InvokeAsync(StateHasChanged);
    }

    private void OnReset()
    {
        model = new AdmissionModel();
    }

    private async Task CloseDialog()
    {
        if (successDialog != null)
        {
            // await successDialog.HideAsync();
            showSuccessMessage = false;
            OnReset(); // Reset form after successful submission
        }
    }

    public class AdmissionModel
    {
        public string FirstName { get; set; } = "";
        public string MiddleName { get; set; } = "";
        public string LastName { get; set; } = "";
        public string Gender { get; set; } = "";
        public DateTime? DateOfBirth { get; set; }
        public string PlaceOfBirth { get; set; } = "";
        public string Nationality { get; set; } = "";
        public string Religion { get; set; } = "";
        
        public string Address { get; set; } = "";
        public string City { get; set; } = "";
        public string State { get; set; } = "";
        public string PostalCode { get; set; } = "";
        public string Country { get; set; } = "";
        public string PhoneNumber { get; set; } = "";
        public string Email { get; set; } = "";
        
        public string GradeApplyingFor { get; set; } = "";
        public string Session { get; set; } = "";
        public string PreviousSchool { get; set; } = "";
        
        public string ParentName { get; set; } = "";
        public string ParentRelationship { get; set; } = "";
        public string ParentOccupation { get; set; } = "";
        public string ParentPhone { get; set; } = "";
        public string ParentEmail { get; set; } = "";
        
        public bool Agreement { get; set; }
    }
}