@using SMS.Common.Dtos.Fees
@using SMS.Common.Dtos.Schools
@implements IDialogContentComponent<FeesSettingDto>

<FluentDialogHeader ShowDismiss="false">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>
<FluentDialogBody>
    <FluentStack Orientation="Orientation.Vertical" Width="100%">
        <FluentTextField @bind-Value="Content.Name" style="width: 100%;" Placeholder="Fees Name" />
        <FluentNumberField @bind-Value="Content.TotalAmount" style="width: 100%;" Placeholder="Total Amount" Type="TextFieldType.Number" />

        @if (Content.FeesBreakDown != null)
        {
            <h6>Breakdown</h6>
            @foreach (var item in Content.FeesBreakDown)
            {
                <FluentStack Orientation="Orientation.Horizontal" Gap="8px">
                    <FluentTextField @bind-Value="item.Name" style="width: 60%;" Placeholder="Breakdown Name" />
                    <FluentNumberField @bind-Value="item.Amount" style="width: 35%;" Placeholder="Amount" Type="TextFieldType.Number" />
                </FluentStack>
            }
        }
    </FluentStack>
</FluentDialogBody>

<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent" IconStart="@(new Icons.Regular.Size20.Save())" OnClick="@SaveAsync">Save</FluentButton>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>

@code {
    [Parameter]
    public FeesSettingDto Content { get; set; } = new();

    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;

    private async Task SaveAsync()
    {
        if (string.IsNullOrWhiteSpace(Content.Name))
        {
            // Optionally show a validation error
            return;
        }
        await Dialog.CloseAsync(Content);
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }
}
